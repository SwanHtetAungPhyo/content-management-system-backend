name: Security and Quality Checks

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]
  schedule:
    - cron: '0 0 * * 0'

jobs:
  security-scan:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    strategy:
      matrix:
        service: [authentication, e-commerce, learning-management-system]

    steps:
      - uses: actions/checkout@v4

      - name: Check if service changed
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            service:
              - '${{ matrix.service }}/**'

      - name: Cache Go Modules
        if: steps.changes.outputs.service == 'true'
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.service }}-${{ hashFiles(format('{0}/go.sum', matrix.service)) }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.service }}-

      - name: Download Dependencies
        if: steps.changes.outputs.service == 'true'
        working-directory: ./${{ matrix.service }}
        run: go mod download

      - name: Run Gosec Security Scanner
        if: steps.changes.outputs.service == 'true' || github.event_name == 'schedule'
        uses: securego/gosec@master
        with:
          args: './${{ matrix.service }}/...'

      - name: Run Trivy vulnerability scanner
        if: steps.changes.outputs.service == 'true' || github.event_name == 'schedule'
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: './${{ matrix.service }}'