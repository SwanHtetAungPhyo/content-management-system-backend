name: Continuous Integration Checking Workflow

on:
  pull_request:
    branches: [main, dev]
  push:
    branches: [features/*]

jobs:
  build-and-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - authentication
          - e-commerce
          - learning-management-system
      fail-fast: false

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Detect Folder Changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            service:
              - '${{ matrix.service }}/**'

      - name: Cache Go Modules
        if: steps.changes.outputs.service == 'true'
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.service }}-${{ hashFiles(format('{0}/go.sum', matrix.service)) }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.service }}-

      - name: Download Dependencies
        if: steps.changes.outputs.service == 'true'
        working-directory: ./${{ matrix.service }}
        run: go mod download

      - name: Run Tests
        if: steps.changes.outputs.service == 'true'
        working-directory: ./${{ matrix.service }}
        run: go test -v ./...

      - name: Run Linter
        if: steps.changes.outputs.service == 'true'
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: ${{ matrix.service }}

      - name: Build Application
        if: steps.changes.outputs.service == 'true'
        working-directory: ./${{ matrix.service }}
        run: go build -v ./cmd/main.go
